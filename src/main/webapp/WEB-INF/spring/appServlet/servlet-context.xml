<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2" />
	</beans:bean>
	
	
	<!-- BeanNameViewResolver는 빈으로 등록된 id와 일치하는 클래스를 뷰페이지로 이용 -->
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
        <beans:property name="order" value="1" />
    </beans:bean>
    
    <!-- 예외처리 -->
    <beans:bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"> 
        <beans:property name="order" value="0"/> 
        <beans:property name="defaultErrorView" value="error"/> 
        <beans:property name="exceptionMappings"> 
            <beans:props> 
                <beans:prop key="RuntimeException">error</beans:prop> 
            </beans:props> 
        </beans:property>
    </beans:bean>

	<!-- AES 256 암호화 모듈 -->
	<beans:bean id="aes256Crypto" class="kr.co.azurepassion.common.cipher.symmetric.Base64Aes256Crypto">
		<beans:property name="charset" value="UTF-8"></beans:property><!-- 기본 케릭터셋 -->
		<beans:property name="secretKey" value="W9XZaiPYJf8F7Sz4+AECgXzm8qiZBDs80tKIxBmqjWQ="></beans:property><!-- 암호화 대칭키 (256 bit) -->
		<beans:property name="iv" value="elT4Q8ySuNXFcFW6d/9VPA=="></beans:property><!-- 초기화 벡터 (IV) (128bit) -->
	</beans:bean>
	
	<context:component-scan base-package="kr.co.azurepassion" />
	
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <beans:property name="maxUploadSize" value="20971520" /> <!-- 20MB -->
        <beans:property name="maxInMemorySize" value="1048576" /> <!-- 1MB -->
    </beans:bean>
    
    
    
	<!-- 초,분,시,일,월,요일  -->
	<beans:bean id="scheduleJob" class="kr.co.azurepassion.schedule.Schedule" />
	<task:scheduled-tasks>
		<!-- <task:scheduled ref="scheduleJob" method="getTotalHistory" cron="0 29 1 * * *" /> -->
		<task:scheduled ref="scheduleJob" method="getLatestHistory" cron="0 0 0 * * MON" />
		<task:scheduled ref="scheduleJob" method="executeAlgorithm" cron="0 2 0 * * MON" />
	</task:scheduled-tasks>
	
	
		
</beans:beans>
